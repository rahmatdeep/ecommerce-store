# version: '3.8'

# services:
#   postgres:
#     image: postgres
#     container_name: ecommerce-db
#     environment:
#       POSTGRES_PASSWORD: mysecretpassword
#       POSTGRES_USER: myuser
#       POSTGRES_DB: mydatabase
#     volumes:
#       - ecommerce-vol:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U myuser"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   ecommerce-store:
#     image: node:14
#     container_name: ecommerce-store
#     working_dir: /app
#     volumes:
#       - .:/app
#     ports:
#       - "3000:3000"
#     environment:
#       DATABASE_URL: postgres://myuser:mysecretpassword@ecommerce-db:5432/mydatabase
#     command: sh -c "npm install && npm run dev"
#     depends_on:
#       postgres:
#         condition: service_healthy

# volumes:
#   ecommerce-vol:



services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://myuser:mysecretpassword@ecommerce-db:5432/mydatabase
    depends_on:
      - ecommerce-db
    volumes:
      - .:/app
      - /app/node_modules

  ecommerce-db:
    image: postgres:13
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - ecommerce-vol:/var/lib/postgresql/data

  prisma-migrate:
    build: .
    environment:
      DATABASE_URL: postgresql://myuser:mysecretpassword@ecommerce-db:5432/mydatabase
    command: npx prisma migrate deploy
    depends_on:
      - ecommerce-db

  stripe-cli:
    image: stripe/stripe-cli
    environment:
      STRIPE_WEBHOOK_SECRET: your_stripe_webhook_secret
    command: >
      sh -c "sleep 10 && stripe listen --forward-to http://host.docker.internal:3000/webhooks/stripe"
    volumes:
      - /path/to/your/stripe-cli:/root/.config/stripe
    depends_on:
      - app

volumes:
  ecommerce-vol:
